// Generated by CoffeeScript 1.3.3
var City, Event, EventCategory, EventCategorySet, EventLink, EventLinkSet, EventPrice, EventPriceSet, EventTag, EventTagSet, events,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Event = (function(_super) {

  __extends(Event, _super);

  function Event(data) {
    this.startDate = ko.observable(new Date(data.startDate));
    this.endDate = ko.observable(new Date(data.endDate));
    this.address = ko.observable(data.address);
    this.contact = ko.observable(data.contact);
    this.preview = ko.observable(data.preview);
    this.description = ko.observable(data.description);
    this.title = ko.observable(data.title);
    this.categories = ko.observableArray(new EventCategorySet(data.categories));
    this.links = ko.observableArray(new EventLinkSet(data.links));
    this.tags = ko.observableArray(new EventTagSet(data.tags));
    this.prices = ko.observableArray(new EventPriceSet(data.prices));
    this.tour = ko.observable(new EventTour(data.tour));
  }

  Event.prototype.duration = function() {
    return dateUtils.formatDuration(this._duration);
  };

  return Event;

})(Backbone.Events);

EventCategory = (function() {

  function EventCategory(data) {
    this.id = ko.observable(data.id);
    this.title = ko.observable(data.title);
  }

  return EventCategory;

})();

EventCategorySet = (function() {

  function EventCategorySet(data) {
    var set;
    set = [];
    data.each(function(i, eventCategory) {
      return set.push(new EventCategory(eventCategory));
    });
  }

  return EventCategorySet;

})();

EventLink = (function() {

  function EventLink(data) {
    this.title = ko.observable(data.title);
    this.url = ko.observable(data.url);
  }

  return EventLink;

})();

EventLinkSet = (function() {

  function EventLinkSet(data) {
    var set;
    set = [];
    data.each(function(i, eventLink) {
      return set.push(new EventLink(eventLink));
    });
  }

  return EventLinkSet;

})();

EventTag = (function() {

  function EventTag(data) {
    this.name = ko.observable(data.name);
  }

  return EventTag;

})();

EventTagSet = (function() {

  function EventTagSet(data) {
    var set;
    set = [];
    data.each(function(i, eventTag) {
      return set.push(new EventTag(eventTag));
    });
  }

  return EventTagSet;

})();

City = (function() {

  function City(data) {
    this.title = ko.observable(data.title);
  }

  return City;

})();

EventPrice = (function() {

  function EventPrice(data) {
    this.city = ko.observable(new City(data.city));
    this.price = ko.observable(data.price);
  }

  return EventPrice;

})();

EventPriceSet = (function() {

  function EventPriceSet(data) {
    var set;
    set = [];
    data.each(function(i, eventPrice) {
      return set.push(new EventPrice(eventPrice));
    });
  }

  return EventPriceSet;

})();

events = [
  {
    "startDate": "Иван",
    "endDate": "Иванов",
    "address": "Московское ш., 101, кв.101 ,Ленинград, 101101",
    "contact": "812 123-1234",
    "preview": "<img src='http://img1-fotki.yandex.net/get/6412/64844073.1d/0_STATIC87fc9_6cd8e943_M'>",
    "description": "<img src='http://img1-fotki.yandex.net/get/6412/64844073.1d/0_STATIC87fc9_6cd8e943_L'>",
    "title": "Осень",
    "categories": [
      {
        "id": 1,
        "title": "Осень"
      }
    ]
  }
];
