// Generated by CoffeeScript 1.3.3
var HotelResult, HotelsResultSet, Room, RoomSet, STARS_VERBOSE,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

STARS_VERBOSE = ['one', 'two', 'three', 'four', 'five'];

Room = (function() {

  function Room(data) {
    this.name = data.showName;
    this.meal = data.meal;
    this.hasMeal = this.meal !== 'Без питания' && this.meal !== 'Не известно';
  }

  return Room;

})();

RoomSet = (function() {

  function RoomSet(data) {
    var room, _i, _len, _ref;
    this.price = data.rubPrice;
    this.rooms = [];
    _ref = data.rooms;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      room = _ref[_i];
      this.rooms.push(new Room(room));
    }
  }

  return RoomSet;

})();

HotelResult = (function() {

  function HotelResult(data) {
    this.closeDetails = __bind(this.closeDetails, this);

    this.showDetails = __bind(this.showDetails, this);
    _.extend(this, Backbone.Events);
    this.hotelName = data.hotelName;
    this.address = data.address;
    console.log(data);
    this.description = data.description;
    this.photos = data.images;
    this.numPhotos = 0;
    this.frontPhoto = {
      smallUrl: 'http://upload.wikimedia.org/wikipedia/en/thumb/7/78/Trollface.svg/200px-Trollface.svg.png',
      largeUrl: 'http://ya.ru'
    };
    if (this.photos && this.photos.length) {
      this.frontPhoto = this.photos[0];
      this.numPhotos = this.photos.length;
    }
    this.stars = STARS_VERBOSE[data.categoryId - 1];
    this.rating = data.rating;
    this.roomSets = [];
    this.push(data);
  }

  HotelResult.prototype.push = function(data) {
    return this.roomSets.push(new RoomSet(data));
  };

  HotelResult.prototype.showDetails = function() {
    var _this = this;
    window.voyanga_debug("HOTELS: Setting popup result", this);
    this.trigger("popup", this);
    $('body').prepend('<div id="popupOverlay"></div>');
    $('#hotels-body-popup').show();
    ko.processAllDeferredBindingUpdates();
    SizeBox('hotels-popup-body');
    ResizeBox('hotels-popup-body');
    return $('#popupOverlay').click(function() {
      return _this.closeDetails();
    });
  };

  HotelResult.prototype.closeDetails = function() {
    window.voyanga_debug("Hiding popup");
    $('#hotels-body-popup').hide();
    return $('#popupOverlay').remove();
  };

  return HotelResult;

})();

HotelsResultSet = (function() {

  function HotelsResultSet(rawHotels) {
    var hotel, key, result, _i, _len, _ref,
      _this = this;
    this._results = {};
    for (_i = 0, _len = rawHotels.length; _i < _len; _i++) {
      hotel = rawHotels[_i];
      key = hotel.hotelId;
      if (this._results[key]) {
        this._results[key].push(hotel);
      } else {
        result = new HotelResult(hotel);
        this._results[key] = result;
        result.on("popup", function(data) {
          return _this.popup(data);
        });
      }
    }
    this.data = [];
    _ref = this._results;
    for (key in _ref) {
      result = _ref[key];
      this.data.push(result);
    }
    this.popup = ko.observable(this.data[0]);
  }

  return HotelsResultSet;

})();
