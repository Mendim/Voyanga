// Generated by CoffeeScript 1.4.0
var AviaSearchParams,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

AviaSearchParams = (function() {

  function AviaSearchParams() {
    this.GAData = __bind(this.GAData, this);

    this.GAKey = __bind(this.GAKey, this);

    this.fromObject = __bind(this.fromObject, this);

    this.getParams = __bind(this.getParams, this);
    this.date = ko.observable('');
    if (window.currentCityCode) {
      this.dep = ko.observable(window.currentCityCode);
    } else {
      this.dep = ko.observable('LED');
    }
    this.arr = ko.observable('');
    this.rt = ko.observable(true);
    this.rtDate = ko.observable('');
    this.passengers = new Passengers();
    this.adults = this.passengers.adults;
    this.children = this.passengers.children;
    this.infants = this.passengers.infants;
  }

  AviaSearchParams.prototype.url = function() {
    var params, result;
    if (window.isLuxury === '1') {
      result = 'flight/search/BEF?';
    } else {
      result = 'flight/search/BE?';
    }
    params = this.getParams();
    result += params.join("&");
    return result;
  };

  AviaSearchParams.prototype.getParams = function(include_type) {
    var params;
    if (include_type == null) {
      include_type = false;
    }
    params = [];
    if (include_type) {
      params.push('type=avia');
    }
    params.push('destinations[0][departure]=' + this.dep());
    params.push('destinations[0][arrival]=' + this.arr());
    params.push('destinations[0][date]=' + moment(this.date()).format('D.M.YYYY'));
    if (this.rt()) {
      params.push('destinations[1][departure]=' + this.arr());
      params.push('destinations[1][arrival]=' + this.dep());
      params.push('destinations[1][date]=' + moment(this.rtDate()).format('D.M.YYYY'));
    }
    params.push('adt=' + this.adults());
    params.push('chd=' + this.children());
    params.push('inf=' + this.infants());
    return params;
  };

  AviaSearchParams.prototype.hash = function() {
    var hash, parts;
    parts = [this.dep(), this.arr(), moment(this.date()).format('D.M.YYYY'), this.adults(), this.children(), this.infants()];
    if (this.rt()) {
      parts.push(moment(this.rtDate()).format('D.M.YYYY'));
    }
    hash = 'avia/search/' + parts.join('/') + '/';
    return hash;
  };

  AviaSearchParams.prototype.fromString = function(data) {
    data = PEGHashParser.parse(data, 'AVIA');
    return this.fromPEGObject(data);
  };

  AviaSearchParams.prototype.fromPEGObject = function(data) {
    this.dep(data.from);
    this.arr(data.to);
    this.date(data.dateFrom);
    this.adults(data.passangers.adults);
    this.children(data.passangers.children);
    this.infants(data.passangers.infants);
    this.rt(data.rt);
    if (data.rt) {
      return this.rtDate(data.rtDateFrom);
    }
  };

  AviaSearchParams.prototype.fromObject = function(data) {
    this.adults(data.adt);
    this.children(data.chd);
    this.infants(data.inf);
    this.rt(data.isRoundTrip);
    this.dep(data.destinations[0].departure_iata);
    this.arr(data.destinations[0].arrival_iata);
    this.date(new Date(data.destinations[0].date));
    if (this.rt()) {
      return this.rtDate(new Date(data.destinations[1].date));
    }
  };

  AviaSearchParams.prototype.GAKey = function() {
    return this.dep() + '/' + this.arr();
  };

  AviaSearchParams.prototype.GAData = function() {
    var passangers, result;
    result = '';
    if (this.rt()) {
      result += '2';
    } else {
      result += '1';
    }
    passangers = [this.adults(), this.children(), this.infants()];
    result += ', ' + passangers.join(" - ");
    result += ', ' + moment(this.date()).format('D.M.YYYY');
    if (this.rt()) {
      result += ' - ' + moment(this.rtDate()).format('D.M.YYYY');
    }
    result += ', ' + moment(this.date()).diff(moment(), 'days');
    if (this.rt()) {
      result += ' - ' + moment(this.rtDate()).diff(moment(this.date()), 'days');
    }
    return result;
  };

  return AviaSearchParams;

})();

implement(AviaSearchParams, ISearchParams);
