// Generated by CoffeeScript 1.4.0
var GenericPopup,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

GenericPopup = (function() {

  function GenericPopup(id, data, modal) {
    var el,
      _this = this;
    this.id = id;
    this.modal = modal != null ? modal : false;
    this.close = __bind(this.close, this);

    this.inside = false;
    $('body').css('overflow', 'hidden');
    $('body').prepend('<div id="popupOverlay"></div>');
    el = $(this.id + '-template');
    if (el[0] === void 0) {
      throw "Wrong popup template";
      return;
    }
    el = $(el.html());
    $('body').prepend(el);
    ko.applyBindings({
      data: data,
      close: this.close
    }, el[0]);
    ko.processAllDeferredBindingUpdates();
    if (this.modal) {
      return;
    }
    $(window).keyup(function(e) {
      if (e.keyCode === 27) {
        return _this.close();
      }
    });
    $(el.find('table')[0]).hover(function() {
      return _this.inside = true;
    }, function() {
      return _this.inside = false;
    });
    el.click(function() {
      if (!_this.inside) {
        return _this.close();
      }
    });
  }

  GenericPopup.prototype.close = function() {
    if (!this.modal) {
      $(window).unbind('keyup');
    }
    $(this.id).remove();
    $('#popupOverlay').remove();
    $('body').css('overflow', 'auto');
    return btnClosePopUp();
  };

  return GenericPopup;

})();
