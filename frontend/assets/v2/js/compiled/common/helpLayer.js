// Generated by CoffeeScript 1.4.0
var HelpLayer, HelpLayerElement,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

HelpLayerElement = (function() {

  function HelpLayerElement(configOptions, parent) {
    var _this = this;
    this.parent = parent;
    this.refresh = __bind(this.refresh, this);

    this.obj = $(configOptions.selector);
    this.selector = configOptions.selector;
    this.posTop = ko.observable(0);
    this.posLeft = ko.observable(0);
    this.dx = 0;
    if (configOptions.dx) {
      this.dx = configOptions.dx;
    }
    this.dy = 0;
    if (configOptions.dy) {
      this.dy = configOptions.dy;
    }
    if (configOptions.image) {
      this.jElem = $('<div class="imageLayer"><img src="' + configOptions.image + '"/></div>');
    } else {
      this.jElem = $('<div class="' + configOptions["class"] + '"></div>');
    }
    this.parent.mainLayer.append(this.jElem);
    this.posTop.subscribe(function(newVal) {
      var ddy, hh;
      ddy = _this.dy;
      if (typeof _this.dy === 'string') {
        hh = $(_this.selector).height();
        ddy = ddy.replace('h', hh.toString());
        ddy = eval(ddy);
      }
      return _this.jElem.css({
        'top': (newVal + ddy) + 'px'
      });
    });
    this.posLeft.subscribe(function(newVal) {
      var ddx, ww;
      ddx = _this.dx;
      if (typeof _this.dx === 'string') {
        ww = $(_this.selector).width();
        ddx = ddx.replace('w', ww.toString());
        ddx = eval(ddx);
      }
      return _this.jElem.css({
        'left': (newVal + ddx) + 'px'
      });
    });
    this.refresh();
  }

  HelpLayerElement.prototype.refresh = function() {
    var offset;
    if ($(this.selector).length > 0) {
      offset = $(this.selector).offset();
      this.posTop(offset.top);
      return this.posLeft(offset.left);
    }
  };

  return HelpLayerElement;

})();

HelpLayer = (function() {

  function HelpLayer() {
    this.refresh = __bind(this.refresh, this);

    this.close = __bind(this.close, this);

    this.show = __bind(this.show, this);

    this.init = __bind(this.init, this);

    this.zindex = __bind(this.zindex, this);

    var _this = this;
    this.pageName = ko.observable('main');
    this.pageName.subscribe(function(newVal) {
      _this.inited = false;
      if ($('#helpLayer').length > 0) {
        $('#helpLayer').remove();
      }
      return _this.layerElements([]);
    });
    this.pageElements = {
      'main': [
        {
          selector: '.tdCity',
          "class": 'hint-input',
          dx: 40,
          dy: 21
        }
      ],
      'tours': [
        {
          selector: '.left-content .my-trip-list',
          "class": 'hint-tours-elements',
          dx: 'w',
          dy: 'h/2'
        }, {
          selector: '.left-content .finish-result:eq(0)',
          "class": 'hint-tours-selected-price-info',
          dx: 'w - 100'
        }, {
          selector: '.left-content .finish-result.voyasha',
          "class": 'hint-tours-voyasha',
          dx: 'w'
        }, {
          selector: '.how-many-man',
          "class": 'hint-tours-route-edit',
          dy: 'h'
        }, {
          selector: '.filter-block .innerFilter',
          "class": 'hint-tours-filters',
          dx: 40,
          dy: 21
        }
      ]
    };
    this.layerElements = ko.observableArray([]);
    this.inited = false;
  }

  HelpLayer.prototype.zindex = function() {
    if (!window.POPUP_NEXT_ZINDEX) {
      window.POPUP_NEXT_ZINDEX = 2000;
    }
    return window.POPUP_NEXT_ZINDEX++;
  };

  HelpLayer.prototype.init = function() {
    var opts, _i, _len, _ref;
    if (!this.inited) {
      this.mainLayer = $('<div id="helpLayer" style="z-index:' + this.zindex() + '"></div>');
      $('body').prepend(this.mainLayer);
      _ref = this.pageElements[this.pageName()];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        opts = _ref[_i];
        this.layerElements.push(new HelpLayerElement(opts, this));
      }
      return this.inited = true;
    } else {
      return this.refresh();
    }
  };

  HelpLayer.prototype.show = function() {
    var _this = this;
    $(window).unbind('keyup');
    $(window).keyup(function(e) {
      if (e.keyCode === 27) {
        return _this.close();
      }
    });
    this.init();
    this.mainLayer.show();
    return this.mainLayer.animate({
      opacity: 0.7
    }, 300, function() {
      return voyanga_debug("opacitied");
    });
  };

  HelpLayer.prototype.close = function() {
    var _this = this;
    $(window).unbind('keyup');
    return this.mainLayer.animate({
      opacity: 0
    }, 300, function() {
      return _this.mainLayer.hide();
    });
  };

  HelpLayer.prototype.refresh = function() {
    var elem, _i, _len, _ref, _results;
    _ref = this.layerElements();
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elem = _ref[_i];
      _results.push(elem.refresh());
    }
    return _results;
  };

  return HelpLayer;

})();
