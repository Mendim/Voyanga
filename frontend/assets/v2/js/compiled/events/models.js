// Generated by CoffeeScript 1.3.3
var City, Event, EventCategory, EventCategorySet, EventLink, EventLinkSet, EventPrice, EventPriceSet, EventSet, EventTag, EventTagSet, EventTour,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ko.bindingHandlers.highlightChange = {
  update: function(element, valueAccessor, allBindingsAccessor) {
    var allBindings, newEl, previousImage, value, valueUnwrapped, varLeftPos, varLeftPosStart, varTopPos, varTopPosStart;
    value = valueAccessor();
    allBindings = allBindingsAccessor();
    valueUnwrapped = ko.utils.unwrapObservable(value);
    previousImage = allBindings.previousImage;
    console.log(previousImage(), valueUnwrapped);
    newEl = $('<div class="IMGmain"><img src=""></div>');
    newEl.appendTo(".centerTours");
    $(".IMGmain").eq(0).find('img').attr("src", previousImage());
    varLeftPos = $(".IMGmain").eq(1).css("left");
    varTopPos = $(".IMGmain").eq(1).css("top");
    varLeftPos = parseInt(varLeftPos.slice(0, -2));
    varTopPos = parseInt(varTopPos.slice(0, -2));
    varLeftPosStart = varLeftPos;
    varTopPosStart = varTopPos;
    $(".IMGmain").eq(1).css("opacity", "0").css("left", varLeftPosStart + "px").css("top", varTopPosStart + "px").find("img").attr("src", valueUnwrapped);
    previousImage(valueUnwrapped);
    return $(".IMGmain").eq(1).find("img").load(function() {
      $(".IMGmain").eq(0).animate({
        opacity: 0
      }, speedAnimateChangePic, function() {
        return $(".IMGmain:not(:last-child)").eq(0).remove();
      });
      return $(".IMGmain").eq(1).animate({
        opacity: 1,
        left: varLeftPos + "px",
        top: varTopPos + "px"
      }, speedAnimateChangePic, function() {
        return setTimeout(function() {
          var startCount;
          return startCount = 0;
        }, 100);
      });
    });
  }
};

Event = (function(_super) {

  __extends(Event, _super);

  function Event(data) {
    var _this = this;
    this.startDate = ko.observable(new Date(data.startDate));
    this.endDate = ko.observable(new Date(data.endDate));
    this.address = ko.observable(data.address);
    this.contact = ko.observable(data.contact);
    this.preview = ko.observable(data.preview);
    this.description = ko.observable(data.description);
    this.title = ko.observable(data.title);
    this.categories = ko.observableArray(new EventCategorySet(data.categories));
    this.links = ko.observableArray(new EventLinkSet(data.links));
    this.tags = ko.observableArray(new EventTagSet(data.tags));
    this.prices = ko.observableArray(new EventPriceSet(data.prices));
    this.tour = ko.observable(new EventTour(data.tour));
    this.image = ko.observable(data.image);
    this.thumb = ko.observable(data.thumb);
    this.active = ko.observable(data.active);
    this.minimalPrice = ko.computed(function() {
      return _this.prices()[0].price;
    });
  }

  Event.prototype.duration = function() {
    return dateUtils.formatDuration(this._duration);
  };

  return Event;

})(Backbone.Events);

EventSet = (function() {

  function EventSet(events) {
    this.setActive = __bind(this.setActive, this);

    var _this = this;
    this.events = ko.observableArray(events);
    this.currentEvent = ko.computed(function() {
      var activeEvents;
      activeEvents = _.filter(_this.events(), function(event) {
        return event.active();
      });
      return activeEvents[0];
    });
    this.previousImage = ko.observable('');
  }

  EventSet.prototype.setActive = function(valueAccessor, event) {
    var _this = this;
    $('.slideTours').find('.triangle').animate({
      'top': '0px'
    }, 200);
    this.events(_.map(this.events(), function(event) {
      return event.active(false);
    }));
    valueAccessor.active(true);
    return $(event.target).closest('.toursTicketsMain').find('.triangle').animate({
      'top': '-16px'
    }, 200);
  };

  return EventSet;

})();

EventCategory = (function() {

  function EventCategory(data) {
    this.id = ko.observable(data.id);
    this.title = ko.observable(data.title);
  }

  return EventCategory;

})();

EventCategorySet = (function() {

  function EventCategorySet(data) {
    var set;
    set = [];
    $.each(data, function(i, eventCategory) {
      return set.push(new EventCategory(eventCategory));
    });
    return set;
  }

  return EventCategorySet;

})();

EventLink = (function() {

  function EventLink(data) {
    this.title = ko.observable(data.title);
    this.url = ko.observable(data.url);
  }

  return EventLink;

})();

EventLinkSet = (function() {

  function EventLinkSet(data) {
    var set;
    set = [];
    $.each(data, function(i, eventLink) {
      return set.push(new EventLink(eventLink));
    });
    return set;
  }

  return EventLinkSet;

})();

EventTag = (function() {

  function EventTag(data) {
    this.name = ko.observable(data.name);
  }

  return EventTag;

})();

EventTagSet = (function() {

  function EventTagSet(data) {
    var set;
    set = [];
    $.each(data, function(i, eventTag) {
      return set.push(new EventTag(eventTag));
    });
    return set;
  }

  return EventTagSet;

})();

City = (function() {

  function City(data) {
    this.title = ko.observable(data.title);
  }

  return City;

})();

EventPrice = (function() {

  function EventPrice(data) {
    this.city = ko.observable(new City(data.city));
    this.price = ko.observable(data.price);
  }

  return EventPrice;

})();

EventPriceSet = (function() {

  function EventPriceSet(data) {
    var set;
    set = [];
    $.each(data, function(i, eventPrice) {
      return set.push(new EventPrice(eventPrice));
    });
    return set;
  }

  return EventPriceSet;

})();

EventTour = (function() {

  function EventTour(data) {
    this.name = data.name;
  }

  return EventTour;

})();

window.eventsRaw = [
  {
    "active": true,
    "startDate": "Иван",
    "endDate": "Иванов",
    "address": "Московское ш., 101, кв.101, Ленинград, 101101",
    "contact": "812 123-1234",
    "thumb": "http://img1-fotki.yandex.net/get/6412/64844073.1d/0_STATIC87fc9_6cd8e943_L",
    "preview": "Превью будет здесь",
    "description": "Здесь будет описание",
    "image": "http://img-fotki.yandex.ru/get/6412/64844073.1d/0_87fc9_6cd8e943_XXL",
    "title": "Осень",
    "categories": [
      {
        "id": 1,
        "title": "Осень"
      }
    ],
    "links": [
      {
        "title": "Осень",
        "url": "http://ya.ru"
      }
    ],
    "tags": [
      {
        "name": "tag1"
      }, {
        "name": "tag2"
      }
    ],
    "prices": [
      {
        "city": {
          "title": 'Москва'
        },
        "price": 12500
      }
    ],
    "tour": [
      {
        "name": 'Отдых за 12500'
      }
    ]
  }, {
    "active": false,
    "startDate": "Иван",
    "endDate": "Иванов",
    "address": "Московское ш., 101, кв.101, Ленинград, 101101",
    "contact": "812 123-1234",
    "thumb": "http://img-fotki.yandex.ru/get/6402/64844073.1d/0_881e6_4aa84b25_M",
    "preview": "Превью будет здесь новое и шикарное",
    "description": "Здесь будет описание",
    "image": "http://img-fotki.yandex.ru/get/6402/64844073.1d/0_881e6_4aa84b25_XXL",
    "title": "Трам пам пам",
    "categories": [
      {
        "id": 1,
        "title": "Осень"
      }
    ],
    "links": [
      {
        "title": "Осень",
        "url": "http://ya.ru"
      }
    ],
    "tags": [
      {
        "name": "tag1"
      }, {
        "name": "tag2"
      }
    ],
    "prices": [
      {
        "city": {
          "title": 'Москва'
        },
        "price": 13244
      }
    ],
    "tour": [
      {
        "name": 'Отдых за 12500'
      }
    ]
  }, {
    "active": false,
    "startDate": "Иван",
    "endDate": "Иванов",
    "address": "Московское ш., 101, кв.101, Ленинград, 101101",
    "contact": "812 123-1234",
    "thumb": "http://img-fotki.yandex.ru/get/6101/64844073.15/0_7ae13_5f74c202_M",
    "preview": "Превью будет здесь",
    "description": "Здесь будет описание",
    "image": "http://img-fotki.yandex.ru/get/6101/64844073.15/0_7ae13_5f74c202_orig",
    "title": "Лето",
    "categories": [
      {
        "id": 1,
        "title": "Осень"
      }
    ],
    "links": [
      {
        "title": "Осень",
        "url": "http://ya.ru"
      }
    ],
    "tags": [
      {
        "name": "tag1"
      }, {
        "name": "tag2"
      }
    ],
    "prices": [
      {
        "city": {
          "title": 'Москва'
        },
        "price": 3850
      }
    ],
    "tour": [
      {
        "name": 'Отдых за 12500'
      }
    ]
  }
];
